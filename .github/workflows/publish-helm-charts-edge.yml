---
name: "Publish Helm Charts: Edge"

on:
  push:
    branches:
    - main
    paths:
    - .github/**
    - charts/**

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      helm-charts: ${{ steps.helm-charts.outputs.helm-charts }}
    steps:
      - name: Cancel Previous Runs 🚫
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Determine Helm Charts to release ⚙️
        id: helm-charts
        run: |
          HELM_CHARTS=$(python -c 'import os, json; print json.dumps(os.listdir("charts/"))')
          echo "::set-output name=helm-charts::${HELM_CHARTS}"

  lint:
    runs-on: ubuntu-latest
    needs:
    - setup
    strategy:
      fail-fast: false
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Helm 🧰
      uses: azure/setup-helm@v1
      with:
        version: v3.4.1

    - name: Setup Python 🧰🐍
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Setup chart-testing 🧰
      uses: helm/chart-testing-action@v2.0.1

    # NOTE:
    #   --validate-chart-schema=false due to https://github.com/helm/chart-testing/pull/300
    - name: Lint with chart-testing 🧪🖋
      run: |
        ct lint \
          --all \
          --validate-maintainers=false \
          --validate-chart-schema=false

  install-test:
    runs-on: ubuntu-latest
    needs:
    - setup
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Helm 🧰
      uses: azure/setup-helm@v1
      with:
        version: v3.4.1

    - name: Setup Python 🐍
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Setup chart-testing 🧰
      uses: helm/chart-testing-action@v2.0.1

    - name: Setup kind cluster 🧰
      uses: helm/kind-action@v1.1.0

    - name: Configure Kubernetes 🧰
      run: |
        echo "Install ingress controller"
        helm repo add haproxy-ingress https://haproxy-ingress.github.io/charts
        helm install haproxy-ingress haproxy-ingress/haproxy-ingress \
          --create-namespace --namespace=ingress-controller \
          --set controller.hostNetwork=true

        echo "Install tekton"
        kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/previous/v0.22.0/release.yaml
        kubectl apply --filename https://storage.googleapis.com/tekton-releases/triggers/previous/v0.12.0/release.yaml

    - name: Test install with chart-testing 🧪
      run: |
        ct install \
          --all

  prepare-for-release:
    runs-on: ubuntu-latest
    needs:
    - setup
    - lint
    - install-test
    strategy:
      matrix:
        helm-chart: ${{ fromJson(needs.setup.outputs.helm-charts) }}
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Read Helm Chart 📒
      id: helm-chart-info
      uses: jacobtomlinson/gha-read-helm-chart@0.1.2
      with:
        path: charts/${{ matrix.helm-chart }}

    - name: Set up Python 🐍
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Determine Helm Chart Next SemVer ⚙️
      id: helm-chart-next-semver
      shell: python
      run: |
        import re

        # INPUT to script
        TARGET_NEXT_PRE_RELEASE="edge"
        TARGET_NEXT_SEGMENT='patch'
        current_semver = "${{ steps.helm-chart-info.outputs.version }}"

        # SOURCE: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
        semver_regex = re.compile(r'^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$')

        # INSPIRATION: https://semver.org/#spec-item-9
        # Matches
        # * foo
        # * foo0
        # * foo.0
        # * foo-bar0-hello.0
        semver_pre_release_regex = re.compile(r'((?P<prerelease_name>[a-zA-Z]+)(.?(?P<prerelease_version>[0-9]+)-?)?)')

        parsed_version = semver_regex.match(current_semver)

        major = int(parsed_version.group('major'))
        minor = int(parsed_version.group('minor'))
        patch = int(parsed_version.group('patch'))
        pre_release = parsed_version.group('prerelease')
        build_metadata = parsed_version.group('buildmetadata')

        # if there is a pre-release component of current Helm Chart SemVer then
        #   only increment the TARGET_NEXT_PRE_RELEASE pre-release segment
        # else if there is not a pre-release component of the current Helm Chart SemVer then
        #   increment the TARGET_NEXT_SEGMENT and set the target pre-release to 0
        new_pre_release = ""
        if( pre_release ):
          parsed_pre_release_segments = (match.groupdict() for match in semver_pre_release_regex.finditer(pre_release))

          found_target_pre_release_semgment = False
          for parsed_pre_release_segment in parsed_pre_release_segments:
            pre_release_segment_name = parsed_pre_release_segment['prerelease_name']
            pre_release_segment_version = parsed_pre_release_segment['prerelease_version']
            pre_release_segment_version = int(pre_release_segment_version)

            if pre_release_segment_name == TARGET_NEXT_PRE_RELEASE:
              pre_release_segment_version += 1
              found_target_pre_release_semgment = True

            new_pre_release += f"-{pre_release_segment_name}.{pre_release_segment_version}"

          if not found_target_pre_release_semgment:
            new_pre_release += f"-{TARGET_NEXT_PRE_RELEASE}.0"
        else:
          if TARGET_NEXT_SEGMENT == "major":
            major += 1
            minor = 0
            patch = 0
          elif TARGET_NEXT_SEGMENT == "minor":
            minor += 1
            patch = 0
          elif TARGET_NEXT_SEGMENT == "patch":
            patch += 1

          new_pre_release += f"-{TARGET_NEXT_PRE_RELEASE}.0"

        # create the new SemVer
        next_semver = f"{major}.{minor}.{patch}{new_pre_release}"

        # output for humans
        print(f"current semver: {current_semver}")
        print(f"next semver: {next_semver}")

        # output for GitHub Action
        print(f"::set-output name=current-semver::{current_semver}")
        print(f"::set-output name=next-semver::{next_semver}")

    - name: Update Helm Chart version 🖋
      uses: docker://mikefarah/yq:3
      with:
        args:
          yq write --inplace charts/${{ matrix.helm-chart }}/Chart.yaml version ${{ steps.helm-chart-next-semver.outputs.next-semver }}

    # NOTE: workaround for https://github.com/helm/chart-releaser/issues/95
    - name: Create Chart.lock ⚙️
      run: |
        helm dependency update charts/${{ matrix.helm-chart }}

     # NOTE:
     #  Chart.lock uploaded as workaround for https://github.com/helm/chart-releaser/issues/95
    - name: Upload Chart.yaml and Chart.lock prepared for release 🔺
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.helm-chart }}
        path: |
          charts/${{ matrix.helm-chart }}/Chart.yaml
          charts/${{ matrix.helm-chart }}/Chart.lock

  release:
    runs-on: ubuntu-latest
    needs:
    - setup
    - prepare-for-release
    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure Git 🛠
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Download Helm Charts prepared to release 🔻
      id: download-helm-charts
      uses: actions/download-artifact@v2
      with:
        path: charts

    - name: Push Updated Helm Chart Verions 💾
      uses: github-actions-x/commit@v2.7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Updated Helm Chart versions for latest merge to: ${{ github.ref }}"

    - name: Setup Helm 🧰
      uses: azure/setup-helm@v1
      with:
        version: v3.4.1

    - name: Run chart-releaser 🚀
      uses: helm/chart-releaser-action@v1.1.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
